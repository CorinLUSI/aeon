class t extends HTMLElement{static get props(){return{}}static get observedAttributes(){return Object.keys(this.props).filter(t=>[Boolean,Number,String].includes(this.props[t].type))}constructor(t=!0){super(),this._=this,this.$={},t&&(this.attachShadow({mode:"open"}),this._=this.shadowRoot);const e=Object.keys(this.constructor.props).reduce((t,e)=>({...t,[e]:this[e]}),{});Promise.resolve().then(()=>{this._props={},Object.keys(this.constructor.props).forEach(t=>{const n=this.hasAttribute(t)?this.getAttribute(t):void 0!==e[t]?e[t]:this[t];Object.defineProperty(this,t,{set:this.setter(t),get:this.getter(t)}),this[t]=n})}),this._renderPromise=null,this._isConnected=!1,this._triggers={}}connectedCallback(){this._isConnected=!0,this._render(!0,!0)}disconnectedCallback(){this._isConnected=!1}_render(t=!1,e=!1){if(!this._renderPromise){if(!(t||this.shouldRender(this._triggers)&&Object.keys(this._triggers).length))return Promise.resolve();this._renderPromise=Promise.resolve().then(()=>{e&&(this.firstRender(this._,this._triggers),this.$=[...this._.querySelectorAll("[id]")].reduce((t,e)=>({...t,[e.id]:e}),{}),this.firstRendered(this._,this._triggers)),this.render(this._,this._triggers),this.rendered(this._,this._triggers),this._renderPromise=null,this._triggers={}})}return this._renderPromise}forceRender(){this._render(!0)}shouldRender(){return!0}firstRender(){}render(){}firstRendered(){}rendered(){}setter(t){return e=>{if(this._props[t]===e)return;t in this._triggers||(this._triggers[t]=this._props[t]),this._props[t]=e;const n=this.constructor.props[t];if(this.constructor.observedAttributes.includes(t)){let s=e;switch(n.type){case Boolean:s=s||""===s}n.type===Boolean?s&&!this.hasAttribute(t)?this.setAttribute(t,""):s||this.removeAttribute(t):this.getAttribute(t)!==s&&([null,void 0].includes(s)?this.removeAttribute(t):this.setAttribute(t,s))}this._isConnected&&this._render()}}getter(t){return()=>this._props[t]}attributeChangedCallback(t,e,n){let s=n;switch(this.constructor.props[t].type){case Boolean:s=""===s;break;case Number:s=Number(s)}this[t]!==s&&(this[t]=s)}}customElements.define("aeon-select",class extends t{static get props(){return{value:{type:Number},items:{type:Array}}}constructor(){super(),this.items=[]}firstRender(t){t.innerHTML='\n      <style>\n        select {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          padding: 0.5rem;\n          padding-right: 1.5rem;\n          font-family: inherit;\n          font-size: 0.8rem;\n          border-radius: 0;\n          border-color: var(--hintColor);\n          background-color: transparent;\n          color: var(--color);\n          width: 100%;\n        }\n\n        .select {\n          position: relative;\n        }\n\n        .select .indicator {\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          right: 0.2rem;\n          pointer-events: none;\n          display: flex;\n          align-items: center;\n        }\n      </style>\n\n      <div class="select">\n        <select id="select">\n        </select>\n        <span class="indicator">\n          <svg width="24" height="24">\n            <g><path fill="currentColor" d="M7 10l5 5 5-5z"></path></g>\n          </svg>\n        </span>\n      </div>\n    '}firstRendered(){this.$.select.addEventListener("change",t=>{this.value=t.target.value})}render(t,e){"value"in e&&this.dispatchEvent(new Event("change",{bubbles:!0})),this.$.select.innerHTML=this.items.map(t=>`<option value="${t.value}">${t.name}</option>`).join(""),this.$.select.value=this.value}}),customElements.define("aeon-calendar",class extends t{static get props(){return{date:{type:String},time:{type:String},value:{type:Object},showtime:{type:Boolean},confirmondate:{type:Boolean},locale:{type:String},startyear:{type:String},endyear:{type:String},startday:{type:String},days:{type:Array},year:{type:Number},month:{type:Number},day:{type:Number},hours:{type:Number},minutes:{type:Number},open:{type:Boolean}}}constructor(){super(),this.showtime=!1,this.confirmondate=!1,this.days=[],this.open=!1}connectedCallback(){super.connectedCallback(),this.addEventListener("keydown",this.onKeyDown.bind(this))}firstRender(t){t.innerHTML='\n      <style>\n        :host {\n          display: none;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n\n          padding: 0.2rem;\n          background-color: var(--bgColor);\n        }\n\n        :host([open]) {\n          display: flex;\n        }\n\n        .week {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .day, .date, button {\n          color: var(--color);\n          background-color: transparent;\n          border: 0;\n          box-sizing: border-box;\n          width: 2.4rem;\n          height: 2.4rem;\n          padding: 0;\n          font-size: calc(2.4rem / 3);\n\n          text-transform: uppercase;\n\n          flex-grow: 0;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .date {\n          border: 1px solid var(--hintColor);\n          border-width: 0 0 1px 1px;\n        }\n\n        .date:last-child {\n          border-right-width: 1px;\n        }\n\n        .date.last + .spacer {\n          border-left-width: 1px;\n        }\n\n        .week:nth-child(2) .date:not(.spacer) {\n          border-top-width: 1px;\n        }\n\n        .week:last-child .spacer {\n          border-right-width: 0;\n          border-bottom-width: 0;\n        }\n\n        .date.today {\n          font-weight: bold;\n        }\n\n        .date:hover, .date.today {\n          font-size: 1.3rem;\n        }\n\n        .date.spacer {\n          border-left-width: 0;\n          pointer-events: none;\n        }\n\n        #buttons {\n          width: 100%;\n          display: flex;\n          justify-content: space-between;\n          margin-top: 0.5em;\n        }\n\n        :host([confirmondate]:not([showtime])) #confirm {\n          display: none;\n        }\n\n        #year-month, #hours-minutes {\n          display: flex;\n          width: 100%;\n        }\n\n        #year-month aeon-select {\n          width: 50%;\n        }\n\n        aeon-select + aeon-select {\n          margin-left: 1rem;\n        }\n\n        #hours-minutes {\n          margin-top: 1rem;\n          display: none;\n          justify-content: center;\n        }\n\n        #hours-minutes aeon-select {\n          width: 3.5rem;\n        }\n\n        :host([showtime]) #hours-minutes {\n          display: flex;\n        }\n      </style>\n\n      <div>\n        <div id="year-month">\n          <aeon-select id="year"></aeon-select>\n          <aeon-select id="month"></aeon-select>\n        </div>\n        <div id="calendar"></div>\n        <div id="hours-minutes">\n          <aeon-select id="hours"></aeon-select>\n          <aeon-select id="minutes"></aeon-select>\n        </div>\n        <div id="buttons">\n          <button id="confirm" title="Confirm">\n            <svg width="24" height="24">\n              <g><path fill="currentColor" d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"></path></g>\n            </svg>\n          </button>\n          <button id="cancel" title="Cancel">\n            <svg width="24" height="24">\n              <g><path fill="currentColor" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></g>\n            </svg>\n          </button>\n          <button id="clear" title=\'Clear\'>\n            <svg width="24" height="24">\n              <g><path fill="currentColor" d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"></path></g>\n            </svg>\n          </button>\n        </div>\n      </div>\n    '}firstRendered(t){this.addEventListener("keyup",t=>{switch(t.key){case"Escape":this.open=!1}}),this.$.year.addEventListener("change",t=>{this.year=t.target.value}),this.$.month.addEventListener("change",t=>{this.month=t.target.value}),this.$.hours.items=[...Array(24).keys()].map((t,e)=>({name:`${e}`.padStart(2,"0"),value:e})),this.$.hours.addEventListener("change",t=>{this.hours=t.target.value}),this.$.minutes.items=[...Array(60).keys()].map((t,e)=>({name:`${e}`.padStart(2,"0"),value:e})),this.$.minutes.addEventListener("change",t=>{this.minutes=t.target.value}),this.$.calendar.addEventListener("click",this.onDateClick.bind(this)),this.$.cancel.addEventListener("click",()=>{this.open=!1}),this.$.confirm.addEventListener("click",()=>{this.confirm()}),this.$.clear.addEventListener("click",()=>{this.dispatchEvent(new Event("clear",{bubbles:!0})),this.open=!1})}render(t,e){console.log("render"),"open"in e&&!1===this.open&&!0===e.open&&this.dispatchEvent(new Event("close",{bubbles:!0})),("year"in e||"month"in e||"day"in e)&&(this.date=this.formatAsDate(this.year,this.month,this.day)),("hours"in e||"minutes"in e)&&(this.time=this.formatAsTime(this.hours,this.minutes));const n=new Date;n.setMonth(0),n.setDate(1),this.$.year.value=this.year,this.$.year.items=[];for(let t=this.startyear;t<=this.endyear;t++)this.$.year.items.push({value:t,name:t});this.$.month.value=this.month,this.$.month.items=[];for(let t=0;t<12;t++){let e=n.getMonth();this.$.month.items.push({value:e,name:n.toLocaleString(this.locale,{month:"short"})}),n.setMonth(t+1)}this.$.month.items.sort((t,e)=>t.num-e.num),n.setMonth(0),n.setDate(1),this.days=[];for(let t=0;t<7;t++){let e=n.getDay();this.days.push({num:e,name:n.toLocaleString(this.locale,{weekday:"short"})}),n.setDate(t+2)}const s=7-this.startday;this.days.sort((t,e)=>(t.num+s)%7-(e.num+s)%7),this.$.hours.value=this.hours,this.$.minutes.value=this.minutes;let i=new Date(this.year,this.month,1,12);const r=i.getDay();i.setMonth(i.getMonth()+1),i.setDate(0);const a=i.getDate();i=new Date(this.year,this.month,1,12);let o=!1,h=!1,d=0;this.$.calendar.innerHTML=`\n      <div class="week">\n        ${this.days.map(t=>`<div class="day">${t.name}</div>`).join("")}\n      </div>\n\n      ${[0,1,2,3,4,5].map(()=>d>=a?null:`\n          <div class="week">\n            ${this.days.map(t=>{t.num%7===r&&(o=!0);let e="";return o&&(d+=1,d<=a?(e=d,i.setDate(e)):h=!0),`\n                  <button class="date ${d===this.day?"today":""} ${!o||h?"spacer":""} ${d===a?"last":""}" data-day="${d}" ${!o||h?"tabindex='-1' disabled":""}>${e}</button>\n              `}).join("")}\n          </div>\n         `).join("")}\n    `;const l=t.querySelectorAll("button:not([disabled]), select");this._firstFocusableEl=l[0],this._lastFocusableEl=l[l.length-1]}rendered(t,e){!0===this.open&&("open"in e&&!1===e.open||"day"in e)&&t.querySelector(".today").focus()}confirm(){this.date=this.formatAsDate(this.year,this.month,this.day),this.time=this.formatAsTime(this.hours,this.minutes),this.value={date:this.date,time:this.time},this.dispatchEvent(new Event("change",{bubbles:!0}))}onKeyDown(t){if(!("Tab"===t.key))return;const e=this.shadowRoot.activeElement;t.shiftKey&&e===this._firstFocusableEl?(this._lastFocusableEl.focus(),t.preventDefault()):t.shiftKey||e!==this._lastFocusableEl||(this._firstFocusableEl.focus(),t.preventDefault())}onDateClick(t){if(t.target.classList.contains("date")){const e=t.target;this.day=parseInt(e.dataset.day,10),this.confirmondate&&!this.showtime&&this.confirm()}}formatAsDate(t,e,n){return`${t}-${`${e+1}`.padStart(2,"0")}-${`${n}`.padStart(2,"0")}`}formatAsTime(t,e){return`${`${t}`.padStart(2,"0")}:${`${e}`.padStart(2,"0")}`}}),customElements.define("aeon-datepicker",class extends t{static get props(){return{date:{type:String},time:{type:String},value:{type:Object},showtime:{type:Boolean},confirmondate:{type:Boolean},locale:{type:String},datestyle:{type:String},startyear:{type:String},endyear:{type:String},startday:{type:String},defaultdate:{type:String},defaulttime:{type:String},hasnative:{type:Boolean},usenative:{type:Boolean}}}constructor(){super();const t=new Date;this.showtime=!1,this.confirmondate=!1,this.datestyle="short",this.startyear=t.getFullYear()-100,this.endyear=t.getFullYear()+5,this.startday=1;try{const t=document.createElement("input");t.type="date",this.hasnative="date"===t.type}catch(t){this.hasnative=!1}this.onClickOutside=this.onClickOutside.bind(this)}connectedCallback(){super.connectedCallback(),document.addEventListener("click",this.onClickOutside)}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener("click",this.onClickOutside)}firstRender(t){t.innerHTML='\n      <style>\n        :host {\n          position: relative;\n          display: contents;\n\n          --rgb: var(--cal-rgb, 0, 0, 0);\n          --bgRgb: var(--cal-bg-rgb, 248, 248, 248);\n          --color: rgb(var(--rgb));\n          --hintColor: rgba(var(--rgb), 0.2);\n          --bgColor: rgb(var(--bgRgb));\n\n          color: var(--color);\n        }\n\n        slot:not([name]) {\n          display: none;\n        }\n\n        :host([hasnative][usenative]) slot {\n          display: none;\n        }\n\n        :host([hasnative][usenative]) slot:not([name]) {\n          display: contents;\n        }\n\n        aeon-calendar {\n          position: absolute;\n        }\n\n        @media (max-width: 640px) {\n          aeon-calendar {\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n          }\n        }\n      </style>\n\n      <slot></slot>\n      <slot name="output"></slot>\n\n      <aeon-calendar id="calendar"></aeon-calendar>\n    '}firstRendered(t){const e=t.querySelector("slot");e.addEventListener("slotchange",t=>{const n=e.assignedNodes().filter(t=>t.nodeType!=Node.TEXT_NODE);this._dateInput=n.find(t=>"date"===t.getAttribute("type")),this._dateInput&&(this._output.placeholder=this._dateInput.placeholder,this.date=this._dateInput.value),this._timeInput=n.find(t=>"time"===t.getAttribute("type")),this._timeInput&&(this.showtime=!0,this.time=this._timeInput.value)}),this._output=document.createElement("input"),this._output.slot="output",this._output.readOnly=!0,this._output.addEventListener("click",()=>{this.$.calendar.open=!0}),this.appendChild(this._output),this.addEventListener("keyup",t=>{switch(t.key){case" ":this.$.calendar.open||(this.$.calendar.open=!0)}}),this.$.calendar.addEventListener("change",t=>{this.date=t.target.value.date,this.time=t.target.value.time,this.$.calendar.open=!1}),this.$.calendar.addEventListener("clear",()=>{this.date=""}),this.$.calendar.addEventListener("close",()=>{this._dontFocus||this._output.focus(),this._dontFocus=!1})}render(t,e){("date"in e||"time"in e)&&(this.value={date:this.date,time:this.time},this.updateFromString(this.date,this.time),this.dispatchEvent(new Event("change",{bubbles:!0}))),("locale"in e||"startyear"in e||"endyear"in e||"startday"in e||"showtime"in e||"confirmondate"in e)&&this.updateFromString(this.date,this.time)}update(t=null){const e=t&&!isNaN(t);let n=t;if(!e){const t=this.defaultdate,e=this.defaulttime;n=this.parseDate(t,e)}const s=this.$.calendar;if(s.year=n.getFullYear(),s.month=n.getMonth(),s.day=n.getDate(),s.hours=n.getHours(),s.minutes=n.getMinutes(),s.locale=this.locale,s.startyear=this.startyear,s.endyear=this.endyear,s.startday=this.startday,s.showtime=this.showtime,s.confirmondate=this.confirmondate,e){const e=new Intl.DateTimeFormat(this.locale,{year:"numeric",month:"numeric",day:"numeric",...this.showtime?{hour:"numeric",minute:"numeric"}:{},...this._datestyle}).format(t);this._output.value=e,this._dateInput&&(this._dateInput.value=this.date),this._timeInput&&(this._timeInput.value=this.time)}else this._output.value="",this._dateInput&&(this._dateInput.value=""),this._timeInput&&(this._timeInput.value="")}parseDate(t,e="00:00"){try{const n=t.split("-"),s=e.split(":");return new Date(n[0],n[1]-1,n[2],s[0],s[1])}catch(t){return new Date}}updateFromString(t,e){this.update(this.parseDate(t,e))}onClickOutside(t){if(this.$.calendar.open){!t.composedPath().some(t=>t===this)&&(this.$.calendar.open=!1,this._dontFocus=!0)}}});
//# sourceMappingURL=app.js.map
